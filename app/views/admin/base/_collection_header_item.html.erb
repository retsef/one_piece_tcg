<%
  collection_resource_name = collection_presenter.resource_name
  collection_resource_class = collection_presenter.resource_class
  cell_header_id = "cell-label--#{collection_presenter.resource_name}_#{attribute}"
  cell_header_class = "cell-label
    cell-label--#{field_type.html_class}
    cell-label--#{collection_presenter.ordered_html_class(attribute)}
    cell-label--#{collection_presenter.resource_name}_#{attribute}"
  aria_sort = sort_order(collection_presenter.ordered_html_class(attribute))

  ordered_params = # sanitized_order_params(page, collection_field_name).merge(
    collection_presenter.order_params_for(attribute, key: collection_field_name)
  # )
  ordered = collection_presenter.ordered_by?(attribute)
  order_direction = collection_presenter.order_direction
%>

<th id="<%= cell_header_id %>"
    class="text-left text-sm font-semibold text-gray-900 tracking-wide
            <%= ('py-3.5 pl-4 pr-3 md:pl-0' if position.zero?) || 'py-3.5 px-3' %>
            <%= cell_header_class %>"
    scope="col"
    role="columnheader"
    aria-sort="<%= aria_sort %>">

  <%= link_to(
        ordered_params, # target: '_top',
        class: "text-muted list-sort #{"list-sorted-#{order_direction}" if ordered}",
        data: { sort: attribute } ) do %>
    <%= t(
      "helpers.label.#{collection_resource_name}.#{attribute}",
      default: collection_resource_class.human_attribute_name(attribute),
    ) %>

    <%= inline_svg_tag "@tabler/icons/icons/outline/#{order_direction == :asc ? 'sort-ascending.svg' : 'sort-descending.svg'}", class: 'h-4 w-5 inline-flex' if ordered %>
  <% end %>
</th>
