# card_event_effect_grammar.treetop
# You can use a .tt extension instead if you wish
module Card::Event
	grammar Trigger
		include Card::Trigger

		rule body
			( effect / none / empty ) dot?
			<ShallowParsedQuery>
		end

		rule effect
			( investment divider? )*
			( condition )*
			(
				sentence /
				space? then_clause
			)+ <ShallowParsedQuery>
		end

		rule investment
			don_investment /
			don_sacrifice /
			power_investment /
			rest_card_investment /
			life_investment /
			return_card_investment
		end

		rule condition
			none
		end

		rule sentence
			(
				activate_sentence /
				draw_sentence and_clause? trash_sentence? /
				play_sentence /
				ko_sentence /
				power_gain_sentence /
				power_give_sentence /
				return_sentence /
				reactivate_don_sentence /
				add_don_sentence /
				rest_opponent_sentence
			)
		end

		rule activation_cost
			don_cost space?
		end

	  rule draw_sentence
	    draw up_to? numbered card
	    space? dot? # <DrawEffect>
	  end

	  rule trash_sentence
	    trash
	    ( up_to? numbered / this )
	    ( event / stage / character / card / or_clause )+
	    hand? space? dot? # <TrashEffect>
	  end

	  rule ko_sentence
	  	ko ( up_to? numbered ) opponent
	  	rested? trait?
	  	( character / stage )
	  	( cost numbered or_less? / power numbered or_less? / 'with ' numbered power or_less? )?
			space? dot?
	  end

		rule power_gain_sentence
			( this / up_to? numbered your colored? / up_to? numbered opponent / up_to? numbered / your of_type or_clause? / of_type )+
			( character / leader / card / or_clause )+ ( cost numbered )?
			( other_than this card space?)?
			gain numbered power
			( every numbered your rested don )?
			( battle / turn )?
		end

		rule power_give_sentence
			give
			( this / up_to? numbered opponent / up_to? numbered your colored? / up_to? numbered )
			( character / leader or_clause character / leader ) ( cost numbered )?
			numbered power ( battle / turn )?
		end

		rule return_sentence
			( return / place )
			( this / up_to? numbered / them / 'the rest ' )
			( character / event / stage / card / or_clause )*
			( cost numbered or_less? )?
			( hand / top_or_bottom_deck / top_deck / bottom_deck )+ any_order?
			space? # <ReturnEffect>
		end

		rule play_sentence
			play ( this / up_to? numbered )
			( has_name / of_type card / of_type? character / event / stage / or_clause )+
			( cost numbered or_less? )?
			( hand / trash / top_or_bottom_deck / top_deck / bottom_deck / deck )+
			( divider shuffle_deck )?
			space? # <PlayEffect>
		end

		rule reactivate_don_sentence
			set_clause up_to? numbered
			your ( rested? don )
			active
			space? dot?
		end

		rule add_don_sentence
			add_clause up_to? numbered ( rested / active )? don
			don_deck space?
			and_clause? set_clause?
			( active / rested )
			dot? space?
		end

		rule rest_opponent_sentence
			rest ( up_to? numbered / all)
			( opponent / your )
			( character / don )
			( cost numbered or_less? )?
			space? dot? # <RestEffect>
		end

		rule power_investment
			may_clause? give ( 'your ' numbered 'active Leader ' ) numbered power turn
			divider? space?
		end

		rule rest_card_investment
			may_clause? rest ( this / up_to? numbered )
			( character / event / stage / card / or_clause )+
			space?
		end

		rule life_investment
			may_clause? 'add ' numbered card 'from your Life area ' hand
			space?
		end

		rule return_card_investment
			may_clause? return numbered character hand
			space?
		end
	end
end
