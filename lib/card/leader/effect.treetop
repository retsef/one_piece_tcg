# card_leader_effect_grammar.treetop
# You can use a .tt extension instead if you wish
module Card::Leader
	grammar Effect
		include Card::Effect

		rule body
			( permanent )*
			( trait trait_description )*
			( effect )* none? empty? dot?
			<ShallowParsedQuery>
		end

		rule permanent
			none
		end

		rule effect
			( activation_cost )?
			(
				action /
				once_per_turn /
				divider
			)*
			(
				investment divider? /
				and_clause space?
			)*
			(
				sentence /
				space? then_clause /
				and_clause space? /
				divider
			)+ <ShallowParsedQuery>
		end

		rule investment
			don_investment /
			don_sacrifice /
			trash_investment /
			power_investment
		end

		rule sentence
			draw_sentence and_clause? trash_sentence? /
			power_gain_sentence /
			power_give_sentence /
			prevent_ko_sentence /
			rest_opponent_sentence /
			return_sentence /
			restand_sentence /
			apply_don_sentence /
			add_don_sentence
		end

		rule draw_sentence
			draw up_to? integer card
			space? # <DrawEffect>
		end

		rule trash_sentence
			trash ( up_to? integer / this ) ( card / event or_clause? / stage or_clause? / character )+ hand?
			space? # <TrashEffect>
		end

		rule power_gain_sentence
			( this / up_to? integer your colored? / up_to? integer opponent / up_to? integer )
			( character / leader / leader or_clause character) ( cost integer )?
			gain integer power ( 'for every ' integer your rested don card )? ( battle / turn )?
		end

		rule power_give_sentence
			give
			( this / up_to? integer opponent / up_to? integer your colored? / up_to? integer )
			( character / leader or_clause up_to? integer character / leader ) ( cost integer )?
			integer power ( battle / turn )?
		end

		rule prevent_ko_sentence
			may_clause? trash_sentence 'instead'
			space? dot? # <PreventKOEffect>
		end

		rule rest_opponent_sentence
			rest ( up_to? integer / all) ( opponent / your ) character
			space? dot? # <RestEffect>
		end

		rule return_sentence
			( return / place ) ( this / up_to? integer / them / 'the rest ' )
			active?
			( card / opponent? character or_clause? / event or_clause? / stage or_clause? )*
			( cost integer or_less? )?
			( hand / top_or_bottom_deck / top_deck / bottom_deck )+
			any_order?
			space? dot? # <ReturnEffect>
		end

		rule restand_sentence
			'Set ' this leader 'as ' active space?
		end

		rule apply_don_sentence
			give ( this leader or_clause? / up_to? integer your character )+
			up_to? integer ( rested don card )
			space? dot?
		end

		rule add_don_sentence
			'Add ' up_to? integer ( rested / active ) don card 'from your ' don 'deck' ( 'as active' / 'and rest it')
		end

		rule activation_cost
			don_cost space? # <DonCostCondition>
		end

		rule trash_investment
			may_clause? trash ( this / up_to? integer ) ( card / character or_clause? / event or_clause? / stage or_clause? )+ hand?
			space?
		end

		rule power_investment
			may_clause? give ( 'your ' integer 'active Leader' space? ) integer power turn
		end
	end
end
