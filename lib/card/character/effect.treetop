# card_character_effect_grammar.treetop
# You can use a .tt extension instead if you wish
module Card::Character
	grammar Effect
		include Card::Effect

		rule body
			( permanent )
			( trait trait_description )*
			( effect )* none? empty? dot?
			<ShallowParsedQuery>
		end

		rule permanent
			(
				name_override /
				unlimited_copy_override /
				battle_condition power_gain_sentence /
				ko_immune_sentence /
				attack_active_sentence
			)*
		end

		rule effect
			( activation_cost )?
			(
				action /
				once_per_turn /
				divider
			)*
			(
				investment divider? /
				and_clause space?
			)*
			( condition / and_clause )*
			(
				sentence /
				space? then_clause /
				and_clause space? /
				trait_description /
				divider
			)+ <ShallowParsedQuery>
		end

		rule investment
			don_investment /
			don_sacrifice /
			trash_investment /
			power_investment /
			rest_card_investment /
			life_investment /
			return_card_investment
		end

		rule condition
			life_condition /
			ko_effect_condition /
			leader_condition /
			not_other_same_character_condition /
			card_hand_condition /
			battle_condition /
			rested_condition /
			don_in_play_condition /
			character_count_condition /
			character_in_play_condition /
			character_cost_condition
		end

		rule sentence
			draw_sentence card_hand_condition? /
			draw_sentence opponent_action_condition? /
			trash_sentence card_hand_condition? /
			look_up_sentence /
			play_sentence /
			reveal_sentence /
			power_gain_sentence card_pile_condition? /
			power_give_sentence /
			cost_gain_sentence /
			cost_reduction_sentence /
			trait_gain_sentence /
			cannot_block_sentence /
			prevent_ko_sentence /
			ko_immune_sentence /
			ko_sentence /
			place_sentence /
			rest_opponent_sentence /
			return_sentence /
			restand_sentence /
			add_card_sentence /
			add_life_sentence /
			apply_don_sentence /
			add_don_sentence /
			reactivate_don_sentence /
			attack_active_sentence /
			event_discount_sentence /
			then_clause place_remaining_card
		end

	  rule draw_sentence
	    draw up_to? integer card space? dot? <DrawEffect>
	  end

	  rule trash_sentence
	    trash
	    ( up_to? integer / this )
	    ( card / event or_clause? / stage or_clause? / character )+
	    hand? space? dot? <TrashEffect>
	  end

	  rule look_up_sentence
	  	('Look at' / 'look at') space? up_to? integer card top_deck divider? space? dot?
	  end

		rule power_gain_sentence
			( this / up_to? integer your has_name / up_to? integer your colored? / up_to? integer opponent / your of_type or_clause? / of_type / up_to? integer your )+
			( character / leader or_clause character / leader and_clause character / leader / card ) card? ( cost integer )?
			( other_than this card space?)?
			gain integer power
			( 'for every ' integer your rested don card )?
			( battle / turn / start_next_turn / end_next_turn / opponent_end_turn )? space? dot?
		end

		rule power_give_sentence
			give
			( this / up_to? integer opponent / up_to? integer your colored? / up_to? integer )
			( character / leader or_clause character / leader ) ( cost integer )?
			integer power ( battle / turn / opponent_end_turn )? space? dot?
		end

		rule cost_reduction_sentence
			give ( up_to? integer )
			opponent character
			integer cost turn space? dot?
		end

		rule cost_gain_sentence
			( this / up_to? integer )
			( character )
			gain integer cost turn? space? dot?
		end

		rule trait_gain_sentence
			( this / up_to? integer )
			( character / leader or_clause character / leader / your has_name card / your has_name card )
			gain ( trait dot? trait_description? )
			( battle / turn )?
			space? dot? trait_description?
			space? dot?
		end

		rule cannot_block_sentence
			your_opponent 'cannot activate ' ('a' space)? trait
			character? ('that has ' / 'with ')?
			integer? ( or_more / or_less )? power?
			battle
			space? dot?
	  end

	  rule ko_sentence
	  	ko ( up_to? integer ) 'of' space opponent
	  	rested? character ( cost integer or_less? / 'with ' integer power or_less? )?
	  	space? dot?
	  end

		rule prevent_ko_sentence
			may_clause? trash_sentence 'instead'
			space? dot? <PreventKOEffect>
		end

		rule ko_immune_sentence
			this character "cannot be K.O.'d" space? battle?
			('by ' element space? 'attribute ' character / 'by effects')?
			space? dot?
		end

		rule attack_active_sentence
			this character 'can also attack ' your_opponent 'active ' character turn?
			space? dot?
		end

		rule place_sentence
			place ( this / up_to? integer )
			( card / character or_clause? / event or_clause? / stage or_clause? )+
			( cost integer or_less? )?
			( hand / top_or_bottom_deck / top_deck / bottom_deck )+
			any_order?
			space? dot? <PlaceEffect>
		end

		rule rest_opponent_sentence
			rest ( up_to? integer / all)
			( opponent / your )
			( character / don card )
			( cost integer or_less? )?
			space? dot? <RestEffect>
		end

		rule return_sentence
			( return / place ) ( this / up_to? integer / them / 'the rest ' )
			active?
			( card / opponent? character or_clause? / event or_clause? / stage or_clause? )*
			( cost integer or_less? )?
			( hand / top_or_bottom_deck / top_deck / bottom_deck )+
			any_order?
			space? dot? <ReturnEffect>
		end

		rule play_sentence
			play ( this / up_to? integer )
			( has_name card? / of_type character / colored of_type? character / character or_clause? / event or_clause? / stage or_clause? )+
			( cost integer or_less? )?
			( other_than has_name )?
			( cost integer or_less? )?
			( hand / trash / top_or_bottom_deck / top_deck / bottom_deck / deck )+
			rested?
			( divider then_clause shuffle_deck )?
			space? dot? <PlayEffect>
		end

		rule reveal_sentence
			reveal ( this / up_to? integer )
			( card / of_type character / of_type card? / character or_clause? / event or_clause? / stage or_clause? )+
			( cost integer or_less? )?
			( hand / top_or_bottom_deck / top_deck )?
			( other_than has_name )?
			( and_clause 'add it ' hand )+
			( divider place_remaining_card )?
		  space? dot? <RevealEffect>
		end

		rule add_card_sentence
			('Add ' / 'add ') up_to? integer
			( rested / active )?
			( of_type or_clause? )*
			( card / colored / character or_clause? / event or_clause? / stage or_clause? )+
			( cost integer or_less? )?
			( other_than has_name )?
			( cost integer or_less? )?
			( trash_pile hand )
			space? dot?
		end

		rule add_life_sentence
			('Add ' / 'add ') up_to? integer card 'from your Life area ' hand
			space? dot?
		end

		rule restand_sentence
			('Set ' / 'set ') ( this / up_to? integer )
			( your of_type or_clause? / of_type )*
			rested?
			( character / leader / card )
			( cost integer or_less? )?
			'as ' active
			space? dot?
		end

		rule reactivate_don_sentence
			set_clause up_to? integer
			your ( rested? don card )
			'as ' active
			space? dot?
		end

		rule apply_don_sentence
			give ( this character )? up_to? integer ( rested don card )
			('to ' ( leader or_clause? / integer your character )*)?
			space? dot?
		end

		rule add_don_sentence
			('Add ' / 'add ') up_to? integer ( rested / active )? don card
			'from your ' don 'deck' space?
			( 'as active' / 'and rest it' / 'and rest them' / and_clause 'set it as active' / and_clause 'set it as rested' )
			space? dot?
		end

		rule event_discount_sentence
			give colored 'Events ' hand integer cost
			space? dot?
		end

		rule activation_cost
		  don_cost space?
		end

		rule trash_investment
			may_clause? trash ( this / up_to? integer )
			( card / character or_clause? / event or_clause? / stage or_clause? / of_type )+
			hand?
			divider? space?
		end

		rule power_investment
			may_clause? give ( 'your ' integer 'active Leader ' ) integer power turn
			divider? space?
		end

		rule rest_card_investment
			may_clause? rest ( this / up_to? integer )
			( card / character or_clause? / event or_clause? / stage or_clause? )+
			space?
		end

		rule life_investment
			may_clause? 'add ' integer card 'from your Life area ' hand
			space?
		end

		rule return_card_investment
			may_clause? return ( integer character / this character ) hand
			space?
		end

		rule life_condition
			if_clause (you_have / your_opponent_has) integer (up_to / or_less)? space? life
			divider space? dot? <LifeCondition>
		end

		rule card_hand_condition
			if_clause (you_have / your_opponent_has)
			integer (up_to / or_less)? card hand?
			divider? space? dot? <CardHandCondition>
		end

		rule card_pile_condition
			'for every ' ( integer 'Events' / card ) space?
			( trash / hand )
			divider? space? dot?
		end

		rule opponent_action_condition
			(if_clause / when_clause ) your_opponent ('activates' / 'have activate') space 'an Event'
			divider? space? dot?
		end

		rule ko_effect_condition
			if_clause this character would_clause ko ( effect / battle )?
			divider? space? dot? <KOCondition>
		end

		rule leader_condition
			if_clause (your / opponent) leader
			( sub_type / of_type / has_name )
			divider? space? dot? <LeaderCondition>
		end

		rule not_other_same_character_condition
			and_clause? you_have 'no other ' has_name character? ('in play')?
			divider? space? dot?
	 	end

		rule battle_condition
		  ( if_clause / when_clause ) this character ( have_battle and_clause? / ko )+ with_attribute? your_opponent? ( character / leader )
		  divider? space? dot?
		end

		rule rested_condition
		  if_clause ( this ) character 'is ' rested
		  divider? space? dot?
		end

		rule character_count_condition
			if_clause ( you_have / your_opponent_has )
			integer (or_more / or_less)?
			rested? character
			divider? space? dot?
		end

		rule character_in_play_condition
		  if_clause ( you_have / you_havent )
		  ('a ' / 'no other ')? has_name character?
		  divider? space? dot?
		end

		rule character_cost_condition
			if_clause ( you_have / 'there is a ' )
			( integer character cost integer / character cost integer)
			divider space? dot?
		end

		rule don_in_play_condition
			if_clause ( opponent 'has more ' / 'you have ' )
			( integer or_more )? don card
			( 'on their field than you' / 'on your field' )?
			divider space? dot?
		end

		rule place_remaining_card
			place 'the rest '
			( bottom_deck / top_deck / top_or_bottom_deck / trash_pile )
			any_order?
			space? dot?
		end

		rule name_override
			'Also treat ' this card 'name as ' has_name 'according to the rules' dot?
		end

		rule unlimited_copy_override
			'Under the rules of this game,' space? may_clause 'have any number of ' this card 'in your deck' dot?
		end
	end
end
