# card_stage_effect_grammar.treetop
# You can use a .tt extension instead if you wish
module Card::Stage
	grammar Effect
		include Card::Effect

		rule body
			( effect / none / empty ) dot?
			<ShallowParsedQuery>
		end

		rule effect
			( activation_cost )?
			(
				action once_per_turn? divider? /
				once_per_turn
			)*
			( investment divider? )*
			( leader_condition )*
			(
				sentence /
				space? then_clause
			)+ <ShallowParsedQuery>
		end

		rule investment
			don_investment /
			rest_card_investment and_clause? trash_investment? /
			trash_investment and_clause? rest_card_investment?
		end

		rule sentence
			draw_sentence and_clause? trash_sentence? divider? trash_sentence? /
			look_up_sentence and_clause? return_sentence? /
			reveal_sentence /
			rest_opponent_sentence /
			add_don_sentence /
			power_gain_sentence
		end

	  rule draw_sentence
	    draw up_to? integer card space?
	  end

	  rule trash_sentence
	    may_clause? trash
	    up_to? integer
	    ( card / event or_clause? / stage or_clause? )+
	    your_hand?
	    dot? space?
	  end

	  rule look_up_sentence
	  	('Look at' / 'look at') space? up_to? integer card top_deck divider? space? dot?
	  end

		rule reveal_sentence
			reveal ( this / up_to? integer )
			( card / of_type character / of_type card? / character or_clause? / event or_clause? / stage or_clause? )+
			( cost integer or_less? )?
			( other_than has_name )?
			( and_clause 'add it ' your_hand )+
			( divider place_remaining_card )?
		  space? dot? # <RevealEffect>
		end

		rule return_sentence
			( return / place ) ( this / up_to? integer / them / 'the rest ' )
			( card / opponent? character or_clause? / event or_clause? / stage or_clause? )*
			( cost integer or_less? )?
			( your_hand / owner_hand / top_or_bottom_deck / top_deck / bottom_deck )+ any_order?
			space? dot? # <ReturnEffect>
		end

		rule rest_opponent_sentence
			rest ( up_to? integer / all) ( opponent / your ) character space?
		end

		rule power_gain_sentence
			( up_to? integer of_type or_clause? / up_to? integer opponent / up_to? integer / of_type )+
			( character / leader or_clause character / leader and_clause character / leader / card ) card?
			( 'on your field ')?
			gain integer power
			( battle / turn )?
			dot? space?
		end

		rule activation_cost
		  don_cost space?
		end

		rule leader_condition
			if_clause your leader
			( 'has the ' of_type / 'is ' has_name )
			divider space? # <LeaderCondition>
		end

		rule rest_card_investment
			may_clause? rest ( this / up_to? integer )
			( card / stage )
			space?
		end

		rule trash_investment
			may_clause? trash ( this / up_to? integer )
			( card / character or_clause? / event or_clause? / stage or_clause? / of_type )+
			your_hand?
			space?
		end

		rule add_don_sentence
			('Add ' / 'add ') up_to? integer ( rested / active )? don card
			'from your ' don 'deck' space? ( 'as active' / 'and rest it')
			dot? space?
		end

		rule place_remaining_card
			place 'the rest '
			( bottom_deck / top_deck / top_or_bottom_deck / trash_pile )
			any_order?
			space? dot?
		end
	end
end
