# card_stage_effect_grammar.treetop
# You can use a .tt extension instead if you wish
module Card::Stage
	grammar Effect
		include Card::Effect

		rule body
			( effect / none / empty ) dot?
			<ShallowParsedQuery>
		end

		rule effect
			( activation_cost )?
			(
				action once_per_turn? divider? /
				once_per_turn
			)*
			( investment / and_clause / divider )*
			( leader_condition )*
			(
			  sentence trail_condition? /
			  space? then_clause /
				and_clause space? /
			  divider
			)+ <ShallowParsedQuery>
		end

		rule investment
			don_investment /
			rest_card_investment /
			trash_investment
		end

		rule trail_condition
			card_hand_condition /
			life_condition
		end

		rule sentence
			draw_sentence /
			trash_sentence /
			look_up_sentence /
			reveal_sentence /
			play_sentence /
			return_sentence /
			rest_opponent_sentence /
			add_don_sentence /
			power_gain_sentence /
			power_give_sentence /
			cost_gain_sentence /
			ko_sentence
		end

	  rule draw_sentence
	    draw up_to? numbered card space?
	  end

	  rule trash_sentence
	  	( may_clause / your_opponent )? trash
			up_to? numbered
	    ( event / stage / character / or_clause )+
	    ( hand / top_deck )?
			space? dot?
	  end

	  rule look_up_sentence
	  	('Look at' / 'look at') space? up_to? numbered card top_deck divider? space? dot?
	  end

		rule reveal_sentence
			reveal ( this / up_to? numbered )
			( of_type? character / of_type? event / stage / of_type card? / or_clause )+
			( cost numbered or_less? )?
			( other_than has_name )?
			( and_clause 'add it ' hand )+
			( divider place_remaining_card )?
		  space? dot? # <RevealEffect>
		end

		rule play_sentence
			play ( this / up_to? numbered )
			( has_name / of_type character / character or_clause? / event or_clause? / stage or_clause? )+
			( cost numbered or_less? )?
			( hand / trash / top_or_bottom_deck / top_deck / bottom_deck / deck )+
			rested?
			( divider then_clause shuffle_deck )?
			space? dot? # <PlayEffect>
		end

		rule return_sentence
			( return / place ) ( this / up_to? numbered / them / 'the rest ' )
			( opponent? character / event / stage / or_clause )*
			( cost numbered or_less? )?
			( hand / top_or_bottom_deck / top_deck / bottom_deck )+ any_order?
			space? dot? # <ReturnEffect>
		end

		rule rest_opponent_sentence
			rest ( up_to? numbered / all) ( opponent / your ) character space?
		end

		rule power_gain_sentence
			( up_to? numbered of_type or_clause? / up_to? numbered opponent / up_to? numbered / of_type )+
			( character / leader / or_clause / and_clause / card )+
			( 'on your field ')?
			gain numbered power
			( battle / turn )?
			dot? space?
		end

		rule power_give_sentence
			give
			( this / up_to? numbered opponent / up_to? numbered your colored? / up_to? numbered )
			( character / leader or_clause character / leader ) ( cost numbered )?
			numbered power ( battle / turn )?
			space? dot?
		end

		rule cost_gain_sentence
			( up_to? numbered / all )
			( character of_type? )
			gain numbered cost turn? space? dot?
		end

	  rule ko_sentence
	  	ko (
				( up_to? numbered ) ( opponent / your_opponent )
				( rested / active )?
				( character / stage )
				( cost numbered or_less? / power numbered or_less? / 'with ' numbered power or_less? )?
	  		/ and_clause
	  	)
	  	space? dot?
	  end

		rule activation_cost
		  don_cost space?
		end

		rule leader_condition
			if_clause your leader
			( of_type / has_name )
			divider space? # <LeaderCondition>
		end

		rule card_hand_condition
			if_clause (you_have / your_opponent_has)
			numbered (up_to / or_less)? card hand?
			divider? space? dot? # <CardHandCondition>
		end

		rule life_condition
			if_clause (you_have / your_opponent_has) numbered (up_to / or_less)? space? life
			divider space? dot? # <LifeCondition>
		end

		rule rest_card_investment
			may_clause? rest
			(
				( this / up_to? numbered )
				( card / stage / your has_name card )+
			)*
			space?
		end

		rule trash_investment
			may_clause? trash ( this / up_to? numbered )
			( character / event / stage / of_type / or_clause / card )+
			hand?
			space?
		end

		rule add_don_sentence
			add_clause up_to? numbered ( rested / active )? don
			don_deck space?
			( active / rested )
			dot? space?
		end

		rule place_remaining_card
			place 'the rest '
			( bottom_deck / top_deck / top_or_bottom_deck / trash_pile )
			any_order?
			space? dot?
		end
	end
end
