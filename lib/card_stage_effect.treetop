# card_stage_effect_grammar.treetop
# You can use a .tt extension instead if you wish
module Card::Stage
	grammar Effect
		include Card::Effect

		rule body
			(
				trait trait_description
			)*
			( activation_cost )?
			(
				action once_per_turn? divider? /
				once_per_turn
			)*
			( don_investment divider? )*
			( trait trait_description )*
			(
				draw_sentence and_clause? trash_sentence? /
				rest_opponent_sentence /
				none / empty
			) dot? <ShallowParsedQuery>
		end

	  rule draw_sentence
	    draw up_to? integer card space?
	  end

	  rule trash_sentence
	    may_clause? trash up_to? integer ( card / event or? / stage or? )+ your_hand? space?
	  end

		rule rest_opponent_sentence
			rest ( up_to? integer / all) ( opponent / your ) character space?
		end

		rule activation_cost
		  don_cost space?
		end
	end
end
